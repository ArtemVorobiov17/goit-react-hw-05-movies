{"version":3,"file":"static/js/160.2619e294.chunk.js","mappings":"2LACA,EAA8B,+B,SCGjBA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,eAAIC,UAAWC,EAAf,SACKJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACRA,IACI,yBACI,SAAC,KAAD,CAEIC,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMT,GAHnB,SAKKM,GAJID,IAFJA,EAFL,KAevB,C,0HCtBD,EAAuB,qB,SCGVK,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACI,+BACI,kBAAMZ,UAAWC,EAAUQ,SAZd,SAAAI,GACjBA,EAAMC,iBACNL,EAASE,GACTC,EAAc,GACjB,EAQO,WACI,kBACIG,KAAK,OACLC,KAAK,aACLC,MAAON,EACPO,SAXU,SAAAL,GACtBD,EAAcC,EAAMM,OAAOF,MAC9B,EAUeG,YAAY,0BAEhB,mBAAQL,KAAK,SAAb,wBAIf,E,SCvBYM,EAAQ,WAAO,IAAD,EACjBvB,GAAWC,EAAAA,EAAAA,MACjB,GAA4BW,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAeyB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAa3C,OAPAC,EAAAA,EAAAA,YAAU,WACDF,IACLG,EAAAA,EAAAA,IAAkBH,GACbI,MAAK,SAAAC,GAAG,OAAIT,GAAU,OAAIS,GAAlB,GAChB,GAAE,CAACL,KAIA,iCACI,SAAClB,EAAD,CAAQV,SAAUA,EAAUW,SAbf,SAAAQ,GACjBQ,EAAgB,CAAEC,MAAOT,GAC5B,IAYQpB,EAAOmC,OAAS,GACX,SAAC,IAAD,CAAYnC,OAAQA,KACpB,0CAIjB,C,uKC/BDoC,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,cACI,6NACJC,OAAQ,qBAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBN,EAAAA,EAAAA,IAAU,qCAAsCC,GADpE,cACGM,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeb,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACoBO,EAAAA,EAAAA,IAAA,gCAAmCP,EAAnC,mBAA2DQ,GAD/E,cACGM,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCxC,GAAjC,uFACoB8B,EAAAA,EAAAA,IAAA,mBAAsB9B,EAAtB,oBADpB,cACGqC,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeG,EAAtB,iDAAO,OAAP,oBAAO,WAAgCzC,EAAI0C,GAApC,uFACoBZ,EAAAA,EAAAA,IAAA,mBAAsB9B,EAAtB,YAA4B0C,EAA5B,mBAAqDX,GADzE,cACGM,EADH,yBAEIA,EAASC,MAFb,kE","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/Search/Search.module.css?06df","components/Search/Search.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie__list\":\"MovieList_movie__list__IZ1Q7\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <ul className={css.movie__list}>\n            {movies.map(({ id, title }) =>\n                title && (\n                    <li key={id}>\n                        <Link\n                            key={id}\n                            to={`/movies/${id}`}\n                            state={{ from: location }}\n                        >\n                            {title}\n                        </Link>\n                    </li>\n                )\n            )}\n        </ul>\n    );\n};\n\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string,\n        })\n    ).isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Search_form__KGT+E\"};","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Search.module.css';\n\nexport const Search = ({ onSubmit }) => {\n    const [queryValue, setQueryValue] = useState(''); \n\n    const handleSubmit = event => {\n        event.preventDefault();\n        onSubmit(queryValue);\n        setQueryValue('');\n    };\n\n    const handleInputChange = event => {\n        setQueryValue(event.target.value);\n    }\n\n    return (\n        <>\n            <form className={css.form} onSubmit={handleSubmit}>\n                <input\n                    type='text'\n                    name='serchQuery'\n                    value={queryValue}\n                    onChange={handleInputChange}\n                    placeholder='Enter movie title...'\n                />\n                <button type='submit'>Search</button>\n            </form>\n        </>\n    );\n}\n\nSearch.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { MoviesList } from 'components/MovieList/MovieList';\nimport { Search } from 'components/Search/Search';\nimport { fetchSearchMovies } from 'services/api';\n\n\n\nexport const Movie = () => {\n    const location = useLocation();\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? '';\n\n    const handleSubmit = value => {\n        setSearchParams({ query: value });\n    };\n\n    useEffect(() => {\n        if (!query) return;\n        fetchSearchMovies(query)\n            .then(res => setMovies([...res]));\n    }, [query]);\n\n\n    return (\n        <>\n            <Search location={location} onSubmit={handleSubmit} />\n            {movies.length > 0\n                ? <MoviesList movies={movies} />\n                : <div>Loading...</div>\n            }\n        </>\n    );    \n}","import axios from \"axios\";\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst options = {\n    method: 'GET',\n    headers: {\n        Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZjEyZjExN2UwNmY2MDE5OGY1ZTI3ZTYzMmEwNGE2MSIsInN1YiI6IjY0YjJiNWUxNzg1NzBlMDBjNmQ0NTQ1YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RAysOSRtE4nE4mWHweiQSs8NW_JIokLQnS_489tlcD0',\n        accept: 'application/json',\n    },\n};\n\nexport async function fetchTrendMovies () {\n    const response = await axios.get('/3/trending/all/day?language=en-US', options);\n    return response.data.results;\n};\n\nexport async function fetchSearchMovies(query) {\n    const response = await axios.get(`/3/search/movie?query=${query}&language=en-US`, options);\n    return response.data.results;\n};\n\nexport async function fetchMovieDetails(id) {\n    const response = await axios.get(`/3/movie/${id}?language=en-US`);\n    return response.data;\n};\n\nexport async function fetchInformation(id, params) {\n    const response = await axios.get(`/3/movie/${id}/${params}?language=en-US`, options);\n    return response.data;\n}\n\n\n\n\n"],"names":["MoviesList","movies","location","useLocation","className","css","map","id","title","to","state","from","Search","onSubmit","useState","queryValue","setQueryValue","event","preventDefault","type","name","value","onChange","target","placeholder","Movie","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchSearchMovies","then","res","length","axios","options","method","headers","Authorization","accept","fetchTrendMovies","response","data","results","fetchMovieDetails","fetchInformation","params"],"sourceRoot":""}